// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_file.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QyAdminFileClient is the client API for QyAdminFile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QyAdminFileClient interface {
	// 新增媒体库
	CreateQyAdminFileLibType(ctx context.Context, in *CreateQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileLibTypeReply, error)
	// 更新媒体库
	UpdateQyAdminFileLibType(ctx context.Context, in *UpdateQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileLibTypeReply, error)
	// 媒体库列表
	ListQyAdminFileLibType(ctx context.Context, in *ListQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*ListQyAdminFileLibTypeReply, error)
	// 批量删除媒体库
	DeleteQyAdminFileLibType(ctx context.Context, in *DeleteQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*DeleteQyAdminFileLibTypeReply, error)
	// 创建媒体库配置
	CreateQyAdminFileLibConfig(ctx context.Context, in *CreateQyAdminFileLibConfigRequest, opts ...grpc.CallOption) (*CreateQyAdminFileLibConfigReply, error)
	// 获取媒体库配置
	GetQyAdminFileLibConfig(ctx context.Context, in *GetQyAdminFileLibConfigRequest, opts ...grpc.CallOption) (*GetQyAdminFileLibConfigReply, error)
	// 获取媒体列表
	ListQyAdminFileLibByType(ctx context.Context, in *ListQyAdminFileRequest, opts ...grpc.CallOption) (*ListQyAdminFileReply, error)
	CreateQyAdminFile(ctx context.Context, in *CreateQyAdminFileRequest, opts ...grpc.CallOption) (*CreateQyAdminFileReply, error)
	UpdateQyAdminFile(ctx context.Context, in *UpdateQyAdminFileRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileReply, error)
	DeleteQyAdminFile(ctx context.Context, in *DeleteQyAdminFileRequest, opts ...grpc.CallOption) (*DeleteQyAdminFileReply, error)
	GetQyAdminFile(ctx context.Context, in *GetQyAdminFileRequest, opts ...grpc.CallOption) (*GetQyAdminFileReply, error)
	ListQyAdminFile(ctx context.Context, in *ListQyAdminFileRequest, opts ...grpc.CallOption) (*ListQyAdminFileReply, error)
}

type qyAdminFileClient struct {
	cc grpc.ClientConnInterface
}

func NewQyAdminFileClient(cc grpc.ClientConnInterface) QyAdminFileClient {
	return &qyAdminFileClient{cc}
}

func (c *qyAdminFileClient) CreateQyAdminFileLibType(ctx context.Context, in *CreateQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileLibTypeReply, error) {
	out := new(UpdateQyAdminFileLibTypeReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFileLibType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) UpdateQyAdminFileLibType(ctx context.Context, in *UpdateQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileLibTypeReply, error) {
	out := new(UpdateQyAdminFileLibTypeReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/UpdateQyAdminFileLibType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) ListQyAdminFileLibType(ctx context.Context, in *ListQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*ListQyAdminFileLibTypeReply, error) {
	out := new(ListQyAdminFileLibTypeReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFileLibType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) DeleteQyAdminFileLibType(ctx context.Context, in *DeleteQyAdminFileLibTypeRequest, opts ...grpc.CallOption) (*DeleteQyAdminFileLibTypeReply, error) {
	out := new(DeleteQyAdminFileLibTypeReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/DeleteQyAdminFileLibType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) CreateQyAdminFileLibConfig(ctx context.Context, in *CreateQyAdminFileLibConfigRequest, opts ...grpc.CallOption) (*CreateQyAdminFileLibConfigReply, error) {
	out := new(CreateQyAdminFileLibConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFileLibConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) GetQyAdminFileLibConfig(ctx context.Context, in *GetQyAdminFileLibConfigRequest, opts ...grpc.CallOption) (*GetQyAdminFileLibConfigReply, error) {
	out := new(GetQyAdminFileLibConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/GetQyAdminFileLibConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) ListQyAdminFileLibByType(ctx context.Context, in *ListQyAdminFileRequest, opts ...grpc.CallOption) (*ListQyAdminFileReply, error) {
	out := new(ListQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFileLibByType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) CreateQyAdminFile(ctx context.Context, in *CreateQyAdminFileRequest, opts ...grpc.CallOption) (*CreateQyAdminFileReply, error) {
	out := new(CreateQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) UpdateQyAdminFile(ctx context.Context, in *UpdateQyAdminFileRequest, opts ...grpc.CallOption) (*UpdateQyAdminFileReply, error) {
	out := new(UpdateQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/UpdateQyAdminFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) DeleteQyAdminFile(ctx context.Context, in *DeleteQyAdminFileRequest, opts ...grpc.CallOption) (*DeleteQyAdminFileReply, error) {
	out := new(DeleteQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/DeleteQyAdminFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) GetQyAdminFile(ctx context.Context, in *GetQyAdminFileRequest, opts ...grpc.CallOption) (*GetQyAdminFileReply, error) {
	out := new(GetQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/GetQyAdminFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminFileClient) ListQyAdminFile(ctx context.Context, in *ListQyAdminFileRequest, opts ...grpc.CallOption) (*ListQyAdminFileReply, error) {
	out := new(ListQyAdminFileReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QyAdminFileServer is the server API for QyAdminFile service.
// All implementations must embed UnimplementedQyAdminFileServer
// for forward compatibility
type QyAdminFileServer interface {
	// 新增媒体库
	CreateQyAdminFileLibType(context.Context, *CreateQyAdminFileLibTypeRequest) (*UpdateQyAdminFileLibTypeReply, error)
	// 更新媒体库
	UpdateQyAdminFileLibType(context.Context, *UpdateQyAdminFileLibTypeRequest) (*UpdateQyAdminFileLibTypeReply, error)
	// 媒体库列表
	ListQyAdminFileLibType(context.Context, *ListQyAdminFileLibTypeRequest) (*ListQyAdminFileLibTypeReply, error)
	// 批量删除媒体库
	DeleteQyAdminFileLibType(context.Context, *DeleteQyAdminFileLibTypeRequest) (*DeleteQyAdminFileLibTypeReply, error)
	// 创建媒体库配置
	CreateQyAdminFileLibConfig(context.Context, *CreateQyAdminFileLibConfigRequest) (*CreateQyAdminFileLibConfigReply, error)
	// 获取媒体库配置
	GetQyAdminFileLibConfig(context.Context, *GetQyAdminFileLibConfigRequest) (*GetQyAdminFileLibConfigReply, error)
	// 获取媒体列表
	ListQyAdminFileLibByType(context.Context, *ListQyAdminFileRequest) (*ListQyAdminFileReply, error)
	CreateQyAdminFile(context.Context, *CreateQyAdminFileRequest) (*CreateQyAdminFileReply, error)
	UpdateQyAdminFile(context.Context, *UpdateQyAdminFileRequest) (*UpdateQyAdminFileReply, error)
	DeleteQyAdminFile(context.Context, *DeleteQyAdminFileRequest) (*DeleteQyAdminFileReply, error)
	GetQyAdminFile(context.Context, *GetQyAdminFileRequest) (*GetQyAdminFileReply, error)
	ListQyAdminFile(context.Context, *ListQyAdminFileRequest) (*ListQyAdminFileReply, error)
	mustEmbedUnimplementedQyAdminFileServer()
}

// UnimplementedQyAdminFileServer must be embedded to have forward compatible implementations.
type UnimplementedQyAdminFileServer struct {
}

func (UnimplementedQyAdminFileServer) CreateQyAdminFileLibType(context.Context, *CreateQyAdminFileLibTypeRequest) (*UpdateQyAdminFileLibTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminFileLibType not implemented")
}
func (UnimplementedQyAdminFileServer) UpdateQyAdminFileLibType(context.Context, *UpdateQyAdminFileLibTypeRequest) (*UpdateQyAdminFileLibTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQyAdminFileLibType not implemented")
}
func (UnimplementedQyAdminFileServer) ListQyAdminFileLibType(context.Context, *ListQyAdminFileLibTypeRequest) (*ListQyAdminFileLibTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminFileLibType not implemented")
}
func (UnimplementedQyAdminFileServer) DeleteQyAdminFileLibType(context.Context, *DeleteQyAdminFileLibTypeRequest) (*DeleteQyAdminFileLibTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminFileLibType not implemented")
}
func (UnimplementedQyAdminFileServer) CreateQyAdminFileLibConfig(context.Context, *CreateQyAdminFileLibConfigRequest) (*CreateQyAdminFileLibConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminFileLibConfig not implemented")
}
func (UnimplementedQyAdminFileServer) GetQyAdminFileLibConfig(context.Context, *GetQyAdminFileLibConfigRequest) (*GetQyAdminFileLibConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQyAdminFileLibConfig not implemented")
}
func (UnimplementedQyAdminFileServer) ListQyAdminFileLibByType(context.Context, *ListQyAdminFileRequest) (*ListQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminFileLibByType not implemented")
}
func (UnimplementedQyAdminFileServer) CreateQyAdminFile(context.Context, *CreateQyAdminFileRequest) (*CreateQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminFile not implemented")
}
func (UnimplementedQyAdminFileServer) UpdateQyAdminFile(context.Context, *UpdateQyAdminFileRequest) (*UpdateQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQyAdminFile not implemented")
}
func (UnimplementedQyAdminFileServer) DeleteQyAdminFile(context.Context, *DeleteQyAdminFileRequest) (*DeleteQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminFile not implemented")
}
func (UnimplementedQyAdminFileServer) GetQyAdminFile(context.Context, *GetQyAdminFileRequest) (*GetQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQyAdminFile not implemented")
}
func (UnimplementedQyAdminFileServer) ListQyAdminFile(context.Context, *ListQyAdminFileRequest) (*ListQyAdminFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminFile not implemented")
}
func (UnimplementedQyAdminFileServer) mustEmbedUnimplementedQyAdminFileServer() {}

// UnsafeQyAdminFileServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QyAdminFileServer will
// result in compilation errors.
type UnsafeQyAdminFileServer interface {
	mustEmbedUnimplementedQyAdminFileServer()
}

func RegisterQyAdminFileServer(s grpc.ServiceRegistrar, srv QyAdminFileServer) {
	s.RegisterService(&QyAdminFile_ServiceDesc, srv)
}

func _QyAdminFile_CreateQyAdminFileLibType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminFileLibTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).CreateQyAdminFileLibType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFileLibType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).CreateQyAdminFileLibType(ctx, req.(*CreateQyAdminFileLibTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_UpdateQyAdminFileLibType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQyAdminFileLibTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).UpdateQyAdminFileLibType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/UpdateQyAdminFileLibType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).UpdateQyAdminFileLibType(ctx, req.(*UpdateQyAdminFileLibTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_ListQyAdminFileLibType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminFileLibTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).ListQyAdminFileLibType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFileLibType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).ListQyAdminFileLibType(ctx, req.(*ListQyAdminFileLibTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_DeleteQyAdminFileLibType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminFileLibTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).DeleteQyAdminFileLibType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/DeleteQyAdminFileLibType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).DeleteQyAdminFileLibType(ctx, req.(*DeleteQyAdminFileLibTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_CreateQyAdminFileLibConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminFileLibConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).CreateQyAdminFileLibConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFileLibConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).CreateQyAdminFileLibConfig(ctx, req.(*CreateQyAdminFileLibConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_GetQyAdminFileLibConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQyAdminFileLibConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).GetQyAdminFileLibConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/GetQyAdminFileLibConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).GetQyAdminFileLibConfig(ctx, req.(*GetQyAdminFileLibConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_ListQyAdminFileLibByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).ListQyAdminFileLibByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFileLibByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).ListQyAdminFileLibByType(ctx, req.(*ListQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_CreateQyAdminFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).CreateQyAdminFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/CreateQyAdminFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).CreateQyAdminFile(ctx, req.(*CreateQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_UpdateQyAdminFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).UpdateQyAdminFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/UpdateQyAdminFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).UpdateQyAdminFile(ctx, req.(*UpdateQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_DeleteQyAdminFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).DeleteQyAdminFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/DeleteQyAdminFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).DeleteQyAdminFile(ctx, req.(*DeleteQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_GetQyAdminFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).GetQyAdminFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/GetQyAdminFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).GetQyAdminFile(ctx, req.(*GetQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminFile_ListQyAdminFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminFileServer).ListQyAdminFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminFile/ListQyAdminFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminFileServer).ListQyAdminFile(ctx, req.(*ListQyAdminFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QyAdminFile_ServiceDesc is the grpc.ServiceDesc for QyAdminFile service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QyAdminFile_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.qycms_bff.admin.v1.QyAdminFile",
	HandlerType: (*QyAdminFileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQyAdminFileLibType",
			Handler:    _QyAdminFile_CreateQyAdminFileLibType_Handler,
		},
		{
			MethodName: "UpdateQyAdminFileLibType",
			Handler:    _QyAdminFile_UpdateQyAdminFileLibType_Handler,
		},
		{
			MethodName: "ListQyAdminFileLibType",
			Handler:    _QyAdminFile_ListQyAdminFileLibType_Handler,
		},
		{
			MethodName: "DeleteQyAdminFileLibType",
			Handler:    _QyAdminFile_DeleteQyAdminFileLibType_Handler,
		},
		{
			MethodName: "CreateQyAdminFileLibConfig",
			Handler:    _QyAdminFile_CreateQyAdminFileLibConfig_Handler,
		},
		{
			MethodName: "GetQyAdminFileLibConfig",
			Handler:    _QyAdminFile_GetQyAdminFileLibConfig_Handler,
		},
		{
			MethodName: "ListQyAdminFileLibByType",
			Handler:    _QyAdminFile_ListQyAdminFileLibByType_Handler,
		},
		{
			MethodName: "CreateQyAdminFile",
			Handler:    _QyAdminFile_CreateQyAdminFile_Handler,
		},
		{
			MethodName: "UpdateQyAdminFile",
			Handler:    _QyAdminFile_UpdateQyAdminFile_Handler,
		},
		{
			MethodName: "DeleteQyAdminFile",
			Handler:    _QyAdminFile_DeleteQyAdminFile_Handler,
		},
		{
			MethodName: "GetQyAdminFile",
			Handler:    _QyAdminFile_GetQyAdminFile_Handler,
		},
		{
			MethodName: "ListQyAdminFile",
			Handler:    _QyAdminFile_ListQyAdminFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/qycms_bff/admin/v1/qy_admin_file.proto",
}
