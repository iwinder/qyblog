// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_site_config.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QyAdminSiteConfigClient is the client API for QyAdminSiteConfig service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QyAdminSiteConfigClient interface {
	// 新增站点配置
	CreateQyAdminSiteConfig(ctx context.Context, in *CreateQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*CreateQyAdminSiteConfigReply, error)
	UpdateQyAdminSiteConfig(ctx context.Context, in *UpdateQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*UpdateQyAdminSiteConfigReply, error)
	// 更新站点配置
	UpdateInBatchesQyAdminSiteConfig(ctx context.Context, in *UpdateBatchesQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*UpdateBatchesQyAdminSiteConfigReply, error)
	DeleteQyAdminSiteConfig(ctx context.Context, in *DeleteQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*DeleteQyAdminSiteConfigReply, error)
	GetQyAdminSiteConfig(ctx context.Context, in *GetQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*GetQyAdminSiteConfigReply, error)
	// 获取站点配置列表
	ListQyAdminSiteConfig(ctx context.Context, in *ListQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*ListQyAdminSiteConfigReply, error)
}

type qyAdminSiteConfigClient struct {
	cc grpc.ClientConnInterface
}

func NewQyAdminSiteConfigClient(cc grpc.ClientConnInterface) QyAdminSiteConfigClient {
	return &qyAdminSiteConfigClient{cc}
}

func (c *qyAdminSiteConfigClient) CreateQyAdminSiteConfig(ctx context.Context, in *CreateQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*CreateQyAdminSiteConfigReply, error) {
	out := new(CreateQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/CreateQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminSiteConfigClient) UpdateQyAdminSiteConfig(ctx context.Context, in *UpdateQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*UpdateQyAdminSiteConfigReply, error) {
	out := new(UpdateQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/UpdateQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminSiteConfigClient) UpdateInBatchesQyAdminSiteConfig(ctx context.Context, in *UpdateBatchesQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*UpdateBatchesQyAdminSiteConfigReply, error) {
	out := new(UpdateBatchesQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/UpdateInBatchesQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminSiteConfigClient) DeleteQyAdminSiteConfig(ctx context.Context, in *DeleteQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*DeleteQyAdminSiteConfigReply, error) {
	out := new(DeleteQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/DeleteQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminSiteConfigClient) GetQyAdminSiteConfig(ctx context.Context, in *GetQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*GetQyAdminSiteConfigReply, error) {
	out := new(GetQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/GetQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminSiteConfigClient) ListQyAdminSiteConfig(ctx context.Context, in *ListQyAdminSiteConfigRequest, opts ...grpc.CallOption) (*ListQyAdminSiteConfigReply, error) {
	out := new(ListQyAdminSiteConfigReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminSiteConfig/ListQyAdminSiteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QyAdminSiteConfigServer is the server API for QyAdminSiteConfig service.
// All implementations must embed UnimplementedQyAdminSiteConfigServer
// for forward compatibility
type QyAdminSiteConfigServer interface {
	// 新增站点配置
	CreateQyAdminSiteConfig(context.Context, *CreateQyAdminSiteConfigRequest) (*CreateQyAdminSiteConfigReply, error)
	UpdateQyAdminSiteConfig(context.Context, *UpdateQyAdminSiteConfigRequest) (*UpdateQyAdminSiteConfigReply, error)
	// 更新站点配置
	UpdateInBatchesQyAdminSiteConfig(context.Context, *UpdateBatchesQyAdminSiteConfigRequest) (*UpdateBatchesQyAdminSiteConfigReply, error)
	DeleteQyAdminSiteConfig(context.Context, *DeleteQyAdminSiteConfigRequest) (*DeleteQyAdminSiteConfigReply, error)
	GetQyAdminSiteConfig(context.Context, *GetQyAdminSiteConfigRequest) (*GetQyAdminSiteConfigReply, error)
	// 获取站点配置列表
	ListQyAdminSiteConfig(context.Context, *ListQyAdminSiteConfigRequest) (*ListQyAdminSiteConfigReply, error)
	mustEmbedUnimplementedQyAdminSiteConfigServer()
}

// UnimplementedQyAdminSiteConfigServer must be embedded to have forward compatible implementations.
type UnimplementedQyAdminSiteConfigServer struct {
}

func (UnimplementedQyAdminSiteConfigServer) CreateQyAdminSiteConfig(context.Context, *CreateQyAdminSiteConfigRequest) (*CreateQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) UpdateQyAdminSiteConfig(context.Context, *UpdateQyAdminSiteConfigRequest) (*UpdateQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) UpdateInBatchesQyAdminSiteConfig(context.Context, *UpdateBatchesQyAdminSiteConfigRequest) (*UpdateBatchesQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInBatchesQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) DeleteQyAdminSiteConfig(context.Context, *DeleteQyAdminSiteConfigRequest) (*DeleteQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) GetQyAdminSiteConfig(context.Context, *GetQyAdminSiteConfigRequest) (*GetQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) ListQyAdminSiteConfig(context.Context, *ListQyAdminSiteConfigRequest) (*ListQyAdminSiteConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminSiteConfig not implemented")
}
func (UnimplementedQyAdminSiteConfigServer) mustEmbedUnimplementedQyAdminSiteConfigServer() {}

// UnsafeQyAdminSiteConfigServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QyAdminSiteConfigServer will
// result in compilation errors.
type UnsafeQyAdminSiteConfigServer interface {
	mustEmbedUnimplementedQyAdminSiteConfigServer()
}

func RegisterQyAdminSiteConfigServer(s grpc.ServiceRegistrar, srv QyAdminSiteConfigServer) {
	s.RegisterService(&QyAdminSiteConfig_ServiceDesc, srv)
}

func _QyAdminSiteConfig_CreateQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).CreateQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/CreateQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).CreateQyAdminSiteConfig(ctx, req.(*CreateQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminSiteConfig_UpdateQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).UpdateQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/UpdateQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).UpdateQyAdminSiteConfig(ctx, req.(*UpdateQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminSiteConfig_UpdateInBatchesQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBatchesQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).UpdateInBatchesQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/UpdateInBatchesQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).UpdateInBatchesQyAdminSiteConfig(ctx, req.(*UpdateBatchesQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminSiteConfig_DeleteQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).DeleteQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/DeleteQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).DeleteQyAdminSiteConfig(ctx, req.(*DeleteQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminSiteConfig_GetQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).GetQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/GetQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).GetQyAdminSiteConfig(ctx, req.(*GetQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminSiteConfig_ListQyAdminSiteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminSiteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminSiteConfigServer).ListQyAdminSiteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminSiteConfig/ListQyAdminSiteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminSiteConfigServer).ListQyAdminSiteConfig(ctx, req.(*ListQyAdminSiteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QyAdminSiteConfig_ServiceDesc is the grpc.ServiceDesc for QyAdminSiteConfig service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QyAdminSiteConfig_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.qycms_bff.admin.v1.QyAdminSiteConfig",
	HandlerType: (*QyAdminSiteConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_CreateQyAdminSiteConfig_Handler,
		},
		{
			MethodName: "UpdateQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_UpdateQyAdminSiteConfig_Handler,
		},
		{
			MethodName: "UpdateInBatchesQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_UpdateInBatchesQyAdminSiteConfig_Handler,
		},
		{
			MethodName: "DeleteQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_DeleteQyAdminSiteConfig_Handler,
		},
		{
			MethodName: "GetQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_GetQyAdminSiteConfig_Handler,
		},
		{
			MethodName: "ListQyAdminSiteConfig",
			Handler:    _QyAdminSiteConfig_ListQyAdminSiteConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/qycms_bff/admin/v1/qy_admin_site_config.proto",
}
