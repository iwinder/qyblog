// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_short_link.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QyAdminShortLinkClient is the client API for QyAdminShortLink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QyAdminShortLinkClient interface {
	// 新增短连接
	CreateQyAdminShortLink(ctx context.Context, in *CreateQyAdminShortLinkRequest, opts ...grpc.CallOption) (*CreateQyAdminShortLinkReply, error)
	// 更新短连接
	UpdateQyAdminShortLink(ctx context.Context, in *UpdateQyAdminShortLinkRequest, opts ...grpc.CallOption) (*UpdateQyAdminShortLinkReply, error)
	// 删除短链接
	DeleteQyAdminShortLink(ctx context.Context, in *DeleteQyAdminShortLinkRequest, opts ...grpc.CallOption) (*DeleteQyAdminShortLinkReply, error)
	// 批量删除短链接
	DeleteQyAdminShortLinks(ctx context.Context, in *DeleteQyAdminShortLinksRequest, opts ...grpc.CallOption) (*DeleteQyAdminShortLinkReply, error)
	GetQyAdminShortLink(ctx context.Context, in *GetQyAdminShortLinkRequest, opts ...grpc.CallOption) (*GetQyAdminShortLinkReply, error)
	// 短链接列表
	ListQyAdminShortLink(ctx context.Context, in *ListQyAdminShortLinkRequest, opts ...grpc.CallOption) (*ListQyAdminShortLinkReply, error)
}

type qyAdminShortLinkClient struct {
	cc grpc.ClientConnInterface
}

func NewQyAdminShortLinkClient(cc grpc.ClientConnInterface) QyAdminShortLinkClient {
	return &qyAdminShortLinkClient{cc}
}

func (c *qyAdminShortLinkClient) CreateQyAdminShortLink(ctx context.Context, in *CreateQyAdminShortLinkRequest, opts ...grpc.CallOption) (*CreateQyAdminShortLinkReply, error) {
	out := new(CreateQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/CreateQyAdminShortLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminShortLinkClient) UpdateQyAdminShortLink(ctx context.Context, in *UpdateQyAdminShortLinkRequest, opts ...grpc.CallOption) (*UpdateQyAdminShortLinkReply, error) {
	out := new(UpdateQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/UpdateQyAdminShortLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminShortLinkClient) DeleteQyAdminShortLink(ctx context.Context, in *DeleteQyAdminShortLinkRequest, opts ...grpc.CallOption) (*DeleteQyAdminShortLinkReply, error) {
	out := new(DeleteQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/DeleteQyAdminShortLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminShortLinkClient) DeleteQyAdminShortLinks(ctx context.Context, in *DeleteQyAdminShortLinksRequest, opts ...grpc.CallOption) (*DeleteQyAdminShortLinkReply, error) {
	out := new(DeleteQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/DeleteQyAdminShortLinks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminShortLinkClient) GetQyAdminShortLink(ctx context.Context, in *GetQyAdminShortLinkRequest, opts ...grpc.CallOption) (*GetQyAdminShortLinkReply, error) {
	out := new(GetQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/GetQyAdminShortLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminShortLinkClient) ListQyAdminShortLink(ctx context.Context, in *ListQyAdminShortLinkRequest, opts ...grpc.CallOption) (*ListQyAdminShortLinkReply, error) {
	out := new(ListQyAdminShortLinkReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminShortLink/ListQyAdminShortLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QyAdminShortLinkServer is the server API for QyAdminShortLink service.
// All implementations must embed UnimplementedQyAdminShortLinkServer
// for forward compatibility
type QyAdminShortLinkServer interface {
	// 新增短连接
	CreateQyAdminShortLink(context.Context, *CreateQyAdminShortLinkRequest) (*CreateQyAdminShortLinkReply, error)
	// 更新短连接
	UpdateQyAdminShortLink(context.Context, *UpdateQyAdminShortLinkRequest) (*UpdateQyAdminShortLinkReply, error)
	// 删除短链接
	DeleteQyAdminShortLink(context.Context, *DeleteQyAdminShortLinkRequest) (*DeleteQyAdminShortLinkReply, error)
	// 批量删除短链接
	DeleteQyAdminShortLinks(context.Context, *DeleteQyAdminShortLinksRequest) (*DeleteQyAdminShortLinkReply, error)
	GetQyAdminShortLink(context.Context, *GetQyAdminShortLinkRequest) (*GetQyAdminShortLinkReply, error)
	// 短链接列表
	ListQyAdminShortLink(context.Context, *ListQyAdminShortLinkRequest) (*ListQyAdminShortLinkReply, error)
	mustEmbedUnimplementedQyAdminShortLinkServer()
}

// UnimplementedQyAdminShortLinkServer must be embedded to have forward compatible implementations.
type UnimplementedQyAdminShortLinkServer struct {
}

func (UnimplementedQyAdminShortLinkServer) CreateQyAdminShortLink(context.Context, *CreateQyAdminShortLinkRequest) (*CreateQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminShortLink not implemented")
}
func (UnimplementedQyAdminShortLinkServer) UpdateQyAdminShortLink(context.Context, *UpdateQyAdminShortLinkRequest) (*UpdateQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQyAdminShortLink not implemented")
}
func (UnimplementedQyAdminShortLinkServer) DeleteQyAdminShortLink(context.Context, *DeleteQyAdminShortLinkRequest) (*DeleteQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminShortLink not implemented")
}
func (UnimplementedQyAdminShortLinkServer) DeleteQyAdminShortLinks(context.Context, *DeleteQyAdminShortLinksRequest) (*DeleteQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminShortLinks not implemented")
}
func (UnimplementedQyAdminShortLinkServer) GetQyAdminShortLink(context.Context, *GetQyAdminShortLinkRequest) (*GetQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQyAdminShortLink not implemented")
}
func (UnimplementedQyAdminShortLinkServer) ListQyAdminShortLink(context.Context, *ListQyAdminShortLinkRequest) (*ListQyAdminShortLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminShortLink not implemented")
}
func (UnimplementedQyAdminShortLinkServer) mustEmbedUnimplementedQyAdminShortLinkServer() {}

// UnsafeQyAdminShortLinkServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QyAdminShortLinkServer will
// result in compilation errors.
type UnsafeQyAdminShortLinkServer interface {
	mustEmbedUnimplementedQyAdminShortLinkServer()
}

func RegisterQyAdminShortLinkServer(s grpc.ServiceRegistrar, srv QyAdminShortLinkServer) {
	s.RegisterService(&QyAdminShortLink_ServiceDesc, srv)
}

func _QyAdminShortLink_CreateQyAdminShortLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminShortLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).CreateQyAdminShortLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/CreateQyAdminShortLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).CreateQyAdminShortLink(ctx, req.(*CreateQyAdminShortLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminShortLink_UpdateQyAdminShortLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQyAdminShortLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).UpdateQyAdminShortLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/UpdateQyAdminShortLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).UpdateQyAdminShortLink(ctx, req.(*UpdateQyAdminShortLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminShortLink_DeleteQyAdminShortLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminShortLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).DeleteQyAdminShortLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/DeleteQyAdminShortLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).DeleteQyAdminShortLink(ctx, req.(*DeleteQyAdminShortLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminShortLink_DeleteQyAdminShortLinks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminShortLinksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).DeleteQyAdminShortLinks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/DeleteQyAdminShortLinks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).DeleteQyAdminShortLinks(ctx, req.(*DeleteQyAdminShortLinksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminShortLink_GetQyAdminShortLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQyAdminShortLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).GetQyAdminShortLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/GetQyAdminShortLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).GetQyAdminShortLink(ctx, req.(*GetQyAdminShortLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminShortLink_ListQyAdminShortLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminShortLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminShortLinkServer).ListQyAdminShortLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminShortLink/ListQyAdminShortLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminShortLinkServer).ListQyAdminShortLink(ctx, req.(*ListQyAdminShortLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QyAdminShortLink_ServiceDesc is the grpc.ServiceDesc for QyAdminShortLink service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QyAdminShortLink_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.qycms_bff.admin.v1.QyAdminShortLink",
	HandlerType: (*QyAdminShortLinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQyAdminShortLink",
			Handler:    _QyAdminShortLink_CreateQyAdminShortLink_Handler,
		},
		{
			MethodName: "UpdateQyAdminShortLink",
			Handler:    _QyAdminShortLink_UpdateQyAdminShortLink_Handler,
		},
		{
			MethodName: "DeleteQyAdminShortLink",
			Handler:    _QyAdminShortLink_DeleteQyAdminShortLink_Handler,
		},
		{
			MethodName: "DeleteQyAdminShortLinks",
			Handler:    _QyAdminShortLink_DeleteQyAdminShortLinks_Handler,
		},
		{
			MethodName: "GetQyAdminShortLink",
			Handler:    _QyAdminShortLink_GetQyAdminShortLink_Handler,
		},
		{
			MethodName: "ListQyAdminShortLink",
			Handler:    _QyAdminShortLink_ListQyAdminShortLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/qycms_bff/admin/v1/qy_admin_short_link.proto",
}
