// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: api/qycms_bff/admin/v1/qy_admin_menus_agent.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QyAdminMenusAgentClient is the client API for QyAdminMenusAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QyAdminMenusAgentClient interface {
	// 新增
	CreateQyAdminMenusAgent(ctx context.Context, in *CreateQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*CreateQyAdminMenusAgentReply, error)
	// 更新
	UpdateQyAdminMenusAgent(ctx context.Context, in *UpdateQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*UpdateQyAdminMenusAgentReply, error)
	// 删除
	DeleteQyAdminMenusAgents(ctx context.Context, in *DeleteQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*DeleteQyAdminMenusAgentReply, error)
	GetQyAdminMenusAgent(ctx context.Context, in *GetQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*GetQyAdminMenusAgentReply, error)
	// 列表
	ListQyAdminMenusAgent(ctx context.Context, in *ListQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*ListQyAdminMenusAgentReply, error)
}

type qyAdminMenusAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewQyAdminMenusAgentClient(cc grpc.ClientConnInterface) QyAdminMenusAgentClient {
	return &qyAdminMenusAgentClient{cc}
}

func (c *qyAdminMenusAgentClient) CreateQyAdminMenusAgent(ctx context.Context, in *CreateQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*CreateQyAdminMenusAgentReply, error) {
	out := new(CreateQyAdminMenusAgentReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminMenusAgent/CreateQyAdminMenusAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminMenusAgentClient) UpdateQyAdminMenusAgent(ctx context.Context, in *UpdateQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*UpdateQyAdminMenusAgentReply, error) {
	out := new(UpdateQyAdminMenusAgentReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminMenusAgent/UpdateQyAdminMenusAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminMenusAgentClient) DeleteQyAdminMenusAgents(ctx context.Context, in *DeleteQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*DeleteQyAdminMenusAgentReply, error) {
	out := new(DeleteQyAdminMenusAgentReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminMenusAgent/DeleteQyAdminMenusAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminMenusAgentClient) GetQyAdminMenusAgent(ctx context.Context, in *GetQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*GetQyAdminMenusAgentReply, error) {
	out := new(GetQyAdminMenusAgentReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminMenusAgent/GetQyAdminMenusAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qyAdminMenusAgentClient) ListQyAdminMenusAgent(ctx context.Context, in *ListQyAdminMenusAgentRequest, opts ...grpc.CallOption) (*ListQyAdminMenusAgentReply, error) {
	out := new(ListQyAdminMenusAgentReply)
	err := c.cc.Invoke(ctx, "/api.qycms_bff.admin.v1.QyAdminMenusAgent/ListQyAdminMenusAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QyAdminMenusAgentServer is the server API for QyAdminMenusAgent service.
// All implementations must embed UnimplementedQyAdminMenusAgentServer
// for forward compatibility
type QyAdminMenusAgentServer interface {
	// 新增
	CreateQyAdminMenusAgent(context.Context, *CreateQyAdminMenusAgentRequest) (*CreateQyAdminMenusAgentReply, error)
	// 更新
	UpdateQyAdminMenusAgent(context.Context, *UpdateQyAdminMenusAgentRequest) (*UpdateQyAdminMenusAgentReply, error)
	// 删除
	DeleteQyAdminMenusAgents(context.Context, *DeleteQyAdminMenusAgentRequest) (*DeleteQyAdminMenusAgentReply, error)
	GetQyAdminMenusAgent(context.Context, *GetQyAdminMenusAgentRequest) (*GetQyAdminMenusAgentReply, error)
	// 列表
	ListQyAdminMenusAgent(context.Context, *ListQyAdminMenusAgentRequest) (*ListQyAdminMenusAgentReply, error)
	mustEmbedUnimplementedQyAdminMenusAgentServer()
}

// UnimplementedQyAdminMenusAgentServer must be embedded to have forward compatible implementations.
type UnimplementedQyAdminMenusAgentServer struct {
}

func (UnimplementedQyAdminMenusAgentServer) CreateQyAdminMenusAgent(context.Context, *CreateQyAdminMenusAgentRequest) (*CreateQyAdminMenusAgentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQyAdminMenusAgent not implemented")
}
func (UnimplementedQyAdminMenusAgentServer) UpdateQyAdminMenusAgent(context.Context, *UpdateQyAdminMenusAgentRequest) (*UpdateQyAdminMenusAgentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQyAdminMenusAgent not implemented")
}
func (UnimplementedQyAdminMenusAgentServer) DeleteQyAdminMenusAgents(context.Context, *DeleteQyAdminMenusAgentRequest) (*DeleteQyAdminMenusAgentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQyAdminMenusAgents not implemented")
}
func (UnimplementedQyAdminMenusAgentServer) GetQyAdminMenusAgent(context.Context, *GetQyAdminMenusAgentRequest) (*GetQyAdminMenusAgentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQyAdminMenusAgent not implemented")
}
func (UnimplementedQyAdminMenusAgentServer) ListQyAdminMenusAgent(context.Context, *ListQyAdminMenusAgentRequest) (*ListQyAdminMenusAgentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQyAdminMenusAgent not implemented")
}
func (UnimplementedQyAdminMenusAgentServer) mustEmbedUnimplementedQyAdminMenusAgentServer() {}

// UnsafeQyAdminMenusAgentServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QyAdminMenusAgentServer will
// result in compilation errors.
type UnsafeQyAdminMenusAgentServer interface {
	mustEmbedUnimplementedQyAdminMenusAgentServer()
}

func RegisterQyAdminMenusAgentServer(s grpc.ServiceRegistrar, srv QyAdminMenusAgentServer) {
	s.RegisterService(&QyAdminMenusAgent_ServiceDesc, srv)
}

func _QyAdminMenusAgent_CreateQyAdminMenusAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQyAdminMenusAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminMenusAgentServer).CreateQyAdminMenusAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminMenusAgent/CreateQyAdminMenusAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminMenusAgentServer).CreateQyAdminMenusAgent(ctx, req.(*CreateQyAdminMenusAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminMenusAgent_UpdateQyAdminMenusAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQyAdminMenusAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminMenusAgentServer).UpdateQyAdminMenusAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminMenusAgent/UpdateQyAdminMenusAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminMenusAgentServer).UpdateQyAdminMenusAgent(ctx, req.(*UpdateQyAdminMenusAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminMenusAgent_DeleteQyAdminMenusAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQyAdminMenusAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminMenusAgentServer).DeleteQyAdminMenusAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminMenusAgent/DeleteQyAdminMenusAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminMenusAgentServer).DeleteQyAdminMenusAgents(ctx, req.(*DeleteQyAdminMenusAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminMenusAgent_GetQyAdminMenusAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQyAdminMenusAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminMenusAgentServer).GetQyAdminMenusAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminMenusAgent/GetQyAdminMenusAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminMenusAgentServer).GetQyAdminMenusAgent(ctx, req.(*GetQyAdminMenusAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QyAdminMenusAgent_ListQyAdminMenusAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQyAdminMenusAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QyAdminMenusAgentServer).ListQyAdminMenusAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.qycms_bff.admin.v1.QyAdminMenusAgent/ListQyAdminMenusAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QyAdminMenusAgentServer).ListQyAdminMenusAgent(ctx, req.(*ListQyAdminMenusAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QyAdminMenusAgent_ServiceDesc is the grpc.ServiceDesc for QyAdminMenusAgent service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QyAdminMenusAgent_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.qycms_bff.admin.v1.QyAdminMenusAgent",
	HandlerType: (*QyAdminMenusAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQyAdminMenusAgent",
			Handler:    _QyAdminMenusAgent_CreateQyAdminMenusAgent_Handler,
		},
		{
			MethodName: "UpdateQyAdminMenusAgent",
			Handler:    _QyAdminMenusAgent_UpdateQyAdminMenusAgent_Handler,
		},
		{
			MethodName: "DeleteQyAdminMenusAgents",
			Handler:    _QyAdminMenusAgent_DeleteQyAdminMenusAgents_Handler,
		},
		{
			MethodName: "GetQyAdminMenusAgent",
			Handler:    _QyAdminMenusAgent_GetQyAdminMenusAgent_Handler,
		},
		{
			MethodName: "ListQyAdminMenusAgent",
			Handler:    _QyAdminMenusAgent_ListQyAdminMenusAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/qycms_bff/admin/v1/qy_admin_menus_agent.proto",
}
